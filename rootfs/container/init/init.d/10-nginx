#!/command/with-contenv bash
# SPDX-FileCopyrightText: Â© 2025 Nfrastack <code@nfrastack.com>
#
# SPDX-License-Identifier: MIT

source /container/base/functions/container/init
prepare_service single
SERVICE_NAME="nginx"

if var_false "${ENABLE_NGINX}" ; then
    print_notice "Disabling Nginx Functionality"
    service_stop 10-nginx
    service_stop 11-nginx-config-reload
    rm -rf \
           /container/logrotate/nginx* \
           /etc/fluent-bit/conf.d/nginx* \
           /etc/logrotate.d/nginx* \
           /etc/zabbix/*/nginx*
    liftoff
    exit 0
fi

if check_container_restarted ; then
    call nginx_configure_mode
    call nginx_configure_server
    call nginx_configure_server_authentication
    call nginx_configure_server_blockbots
    call nginx_configure_logging
    call nginx_configure_maintenance

    if var_true "${NGINX_ENABLE_APPLICATION_CONFIGURATION}"; then
        if [ -n "${NGINX_WEBROOT_SUFFIX}" ]; then
            _nginx_webroot_original="${NGINX_WEBROOT}"
            NGINX_WEBROOT=${NGINX_WEBROOT}${NGINX_WEBROOT_SUFFIX}
        fi

        call nginx_configure_site_default

        if [ -n "${NGINX_SITE_ENABLED}" ] ; then
            if [ "${NGINX_SITE_ENABLED,,}" != "null" ] ; then
                for site_list in $(echo "${NGINX_SITE_ENABLED}" | tr "," "\n"); do
                    case "${site_list}" in
                        "all")
                            site_filelist=$(find /etc/nginx/sites.available/*.conf /override/sites.available/*.conf -type f ! -name *.enc* -print -maxdepth 1 2>/dev/null)
                        ;;
                        * )
                            site_filelist=$(find /etc/nginx/sites.available/${site_list}.conf /override/sites.available/${site_list}.conf -type f ! -name *.enc* -print -maxdepth 1 2>/dev/null)
                        ;;
                    esac
                    for site_path in $(echo "${site_filelist}"); do
                        site="$(basename "${site_path%.*}")"
                        print_info "[configure_site] Configuring site '${site}'"
                        call nginx_configure_site_bootstrap "${site_path}"
                        call nginx_configure_site_authentication "${site_path}"
                        call nginx_configure_site_blockbots "${site}"
                        call nginx_configure_site_cache_client "${site}"
                        call nginx_configure_site_exploit_protection "${site}"
                        call nginx_configure_site_includes "${site_path}"
                        call nginx_site_enable "${site}"
                    done
                done
            fi
        fi
    else
        print_notice "Not configurating Website configuration files"
    fi
    call nginx_post_init
fi

liftoff
